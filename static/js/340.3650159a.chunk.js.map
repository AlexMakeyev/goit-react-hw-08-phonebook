{"version":3,"file":"static/js/340.3650159a.chunk.js","mappings":"wPAwBA,EAxBe,CACXA,KAAM,CACFC,MAAO,YACPD,KAAM,OACNE,KAAM,OACNC,YAAa,uBACbC,UAAU,GAEdC,MAAO,CACHJ,MAAO,aACPD,KAAM,QACNE,KAAM,QACNC,YAAa,mBACbC,UAAU,GAEdE,SAAU,CACNL,MAAO,gBACPD,KAAM,WACNE,KAAM,WACNC,YAAa,sCACbC,UAAU,I,sCCnBLG,EAAOC,EAAAA,EAAAA,KAAH,gNAWJC,EAAQD,EAAAA,EAAAA,MAAH,sIAOLE,EAAYF,EAAAA,EAAAA,IAAH,8G,SCTP,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcS,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAON,EAAP,KAAiBS,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACjCC,GAAUF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCE,GAAaH,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAErCG,EAAgB,SAAAC,GACpB,MAAwBA,EAAMC,OAAtBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,OAAQ1B,GACN,IAAK,OACHa,EAAQa,GACR,MACF,IAAK,QACHZ,EAASY,GACT,MACF,IAAK,WACHX,EAAYW,GACZ,MACF,QACE,OAEL,EAaD,OACE,SAAChB,EAAD,WACE,UAACH,EAAD,CAAMoB,SAVW,SAAAH,GACnBA,EAAMI,iBALW,SAAAC,GACjB,IAAMC,GAASC,EAAAA,EAAAA,IAAOF,GACtBb,EAASc,EACV,CAGCE,CAAW,CAAEhC,KAAAA,EAAMK,MAAAA,EAAOC,SAAAA,IAC1BO,EAAQ,IACRC,EAAS,IACTC,EAAY,GACb,EAIG,WACE,SAACN,EAAD,CAAOwB,QAASf,EAAhB,UACE,SAACgB,EAAA,GAAD,QACEC,QAAQ,WACRC,GAAIlB,EACJQ,MAAO1B,EACPqC,SAAUd,GACNe,EAAAA,UAGR,SAAC7B,EAAD,CAAOwB,QAASZ,EAAhB,UACE,SAACa,EAAA,GAAD,QACEC,QAAQ,WACRC,GAAIf,EACJK,MAAOrB,EACPgC,SAAUd,GACNe,EAAAA,WAGR,SAAC7B,EAAD,CAAOwB,QAASX,EAAhB,UACE,SAACY,EAAA,GAAD,QACEC,QAAQ,WACRC,GAAId,EACJI,MAAOpB,EACP+B,SAAUd,GACNe,EAAAA,cAGR,SAACC,EAAA,EAAD,CAAQJ,QAAQ,YAAYjC,KAAK,SAAjC,0BAMP,C,wBC9Ec,SAASsC,IAEtB,OADoBC,EAAAA,EAAAA,IAAYC,EAAAA,KAEvB,SAAC,KAAD,CAAUC,GAAG,eAGpB,0BACE,SAAChC,EAAD,KAGL,C","sources":["components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["const fields = {\n    name: {\n        label: \"User name\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Enter full user name\",\n        required: true,\n    },\n    email: {\n        label: \"User email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter user email\",\n        required: true,\n    },\n    password: {\n        label: \"User password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter user password (min 8 symbols)\",\n        required: true,\n    }\n}\n\nexport default fields;","import styled from '@emotion/styled';\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 40px;\n  margin-left: 750px;\n\n  background-color: #fff;\n  width: 400px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  font-size: 20px;\n`;\nexport const Container = styled.div`\n  background-color: #cfe8fc;\n  width: 100%;\n  height: 100vh;\n  padding-top: 35px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signup } from 'redux/auth/operations';\nimport { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport fields from './fields';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { Form, Label, Container } from './RegisterForm.styled';\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const nameId = useMemo(() => nanoid(), []);\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n\n  const onInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onRegister = data => {\n    const action = signup(data);\n    dispatch(action);\n  };\n  const onSubmitForm = event => {\n    event.preventDefault();\n    onRegister({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={onSubmitForm}>\n        <Label htmlFor={nameId}>\n          <TextField\n            variant=\"outlined\"\n            id={nameId}\n            value={name}\n            onChange={onInputChange}\n            {...fields.name}\n          />\n        </Label>\n        <Label htmlFor={emailId}>\n          <TextField\n            variant=\"outlined\"\n            id={emailId}\n            value={email}\n            onChange={onInputChange}\n            {...fields.email}\n          />\n        </Label>\n        <Label htmlFor={passwordId}>\n          <TextField\n            variant=\"outlined\"\n            id={passwordId}\n            value={password}\n            onChange={onInputChange}\n            {...fields.password}\n          />\n        </Label>\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n","import React from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { isLogin } from 'redux/auth/authSelector';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport default function RegisterPage() {\n  const isUserLogin = useSelector(isLogin);\n  if (isUserLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["name","label","type","placeholder","required","email","password","Form","styled","Label","Container","RegisterForm","useState","setName","setEmail","setPassword","dispatch","useDispatch","nameId","useMemo","nanoid","emailId","passwordId","onInputChange","event","target","value","onSubmit","preventDefault","data","action","signup","onRegister","htmlFor","TextField","variant","id","onChange","fields","Button","RegisterPage","useSelector","isLogin","to"],"sourceRoot":""}