{"version":3,"file":"static/js/997.266b50fe.chunk.js","mappings":"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","sources":["components/PhoneBook/Form/Form.styled.jsx","components/PhoneBook/Form/Form.jsx","components/PhoneBook/Contacts/Contacts.styled.jsx","components/PhoneBook/Contacts/Contacts.jsx","components/PhoneBook/Filter/Filter.styled.jsx","components/PhoneBook/Filter/Filter.jsx","components/PhoneBook/PhoneBook.styled.jsx.jsx","redux/contacts/contactsSelector.js","components/PhoneBook/PhoneBook.jsx","pages/MyPhonebookPage/MyPhoneBookPage.styled.jsx","pages/MyPhonebookPage/MyPhoneBookPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n// import { Field, Form, ErrorMessage} from 'formik'\n\nexport const ContactsForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  padding: 40px;\n  width: 400px;\n`;\n\nexport const LabelName = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 0;\n  margin-bottom: 30px;\n\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const LabelPhone = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { LabelName, LabelPhone, ContactsForm, Container } from './Form.styled';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const onAddContact = contact => {\n    const action = addContact(contact);\n    dispatch(action);\n  };\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const onInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    onAddContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <ContactsForm onSubmit={onSubmitForm}>\n        <LabelName htmlFor={nameId}>\n          Name:\n          <TextField\n            variant=\"outlined\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={onInputChange}\n          />\n        </LabelName>\n        <LabelPhone htmlFor={numberId}>\n          Number:\n          <TextField\n            variant=\"outlined\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={onInputChange}\n          />\n        </LabelPhone>\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </ContactsForm>\n    </Container>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\n// const initialValues = {\n//     name: '',\n//     number: '',\n\n// };\n// const schema = yup.object().shape({\n//     name: yup.string().required(),\n//     number: yup.number().required().positive().integer(),\n\n// })\n// export class FormPhone extends React.Component {\n\n//     handleSubmit = (values, actions) => {\n\n//         const id = nanoid(10);\n//         const contact = {\n//           id,\n//           ...values,\n//         };\n//         this.props.submit(contact);\n//         console.log(values);\n//         console.log(actions);\n//         actions.resetForm();\n\n//     };\n//     // static propTypes = {\n//     //     onSubmit: PropTypes.func.isRequired,\n//     //   };\n\n//       render() {\n\n//         return (<div>\n//             <Formik\n//                 initialValues={initialValues}\n//                 onSubmit ={this.handleSubmit}\n//                 validationSchema={schema}>\n//             <ContactsForm >\n//                 <LabelName>Name:\n//                     <Input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                         required\n//                         placeholder=\"Please enter name\"\n//                         autocomplete=\"off\"\n//                         />\n//                         <Error component=\"div\" name=\"name\" />\n\n//                 </LabelName>\n\n//                 <LabelPhone>Number:\n//                     <Input\n//                         type=\"tel\"\n//                         name=\"number\"\n//                         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                         required\n//                         placeholder=\"Please enter number\"\n//                         autocomplete=\"off\"\n//                         />\n//                         <Error component=\"div\" name=\"number\" />\n//                 </LabelPhone>\n//                 <AddButton type=\"submit\">Add contact\n//                 </AddButton>\n//             </ContactsForm>\n\n//         </Formik>\n//         </div>)\n\n//       }\n// };\n","import styled from '@emotion/styled';\nexport const ContactList = styled.ul`\nlist-style: none;\nmargin top: 40px;\nmargin-left: 160px;\npadding: 0;\ndisplay: flex;\nflex-direction: column;\nflexwrap: wrap;\njustify-content: center;\nalign-items: start;\n\n`;\nexport const Item = styled.li`\n  margin-top: 20px;\n  font-size: 15px;\n  font-weight: bold;\n`;\nexport const DeleteButton = styled.button`\n  margin-left: 20px;\n  width: 40px;\n  height: 20px;\n  border: 1px solid green;\n  border-radius: 4px;\n  color: black;\n  background-color: grey;\n  font-weight: 400;\n  font-size: 10px;\n`;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n// import { ContactsItem } from 'components/ContactsItem/ContactsItem';\nimport { ContactList, Item } from './Contacts.styled';\nimport { FaTimes } from 'react-icons/fa';\nimport IconButton from '@mui/material/IconButton';\n\nexport const Contacts = ({ items }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  };\n\n  const elements = items.map(({ name, number, id }) => {\n    return (\n      <Item key={id}>\n        {name}: {number}{' '}\n        {/* <DeleteButton type=\"submit\" onClick={() => onDeleteContact(id)}>\n          Delete\n        </DeleteButton> */}\n        <IconButton\n          size=\"small\"\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"logout\"\n          sx={{ mr: 2 }}\n          onClick={() => onDeleteContact(id)}\n        >\n          <FaTimes />\n        </IconButton>\n      </Item>\n    );\n  });\n  return <ContactList>{elements}</ContactList>;\n};\n// Contacts.propTypes = {\n//   items: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     }).isRequired\n//   ),\n//   deleteContact: PropTypes.func.isRequired,\n// };\n","import styled from '@emotion/styled';\n\nexport const FilterList = styled.div`\n  margin-left: 160px;\n  background-color: #fff;\n  width: 270px;\n  padding: 40px;\n  padding-right: 0;\n  padding-top: 20px;\n`;\nexport const FilterTitle = styled.p`\n  margin-left: 10px;\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const FilterInput = styled.input`\n  font-size: 20px;\n  border: 1px solid green;\n  border-radius: 4px;\n  color: black;\n  background-color: grey;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport TextField from '@mui/material/TextField';\n// import PropTypes from 'prop-types';\nimport { FilterList, FilterTitle } from './Filter.styled';\n\nconst Filter = ({ filter }) => {\n  const dispatch = useDispatch();\n  const onChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n  const filterID = nanoid();\n\n  return (\n    <FilterList>\n      <FilterTitle htmlFor={filterID}>Find contact by name</FilterTitle>\n      <TextField\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      ></TextField>\n    </FilterList>\n  );\n};\n\nexport default Filter;\n\n// Filter.propTypes = {\n//   filter: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from '@emotion/styled';\n\nexport const AppStyled = styled.div`\n  display: flex;\n\n  height: 100vh;\n  // background-color: #cfe8fc;\n\n  padding: 15px;\n`;\nexport const Title = styled.h1`\n  margin-bottom: 0;\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: 'Roboto', sans-serif;\n`;\nexport const SubTitle = styled.h2`\n  margin-bottom: 0;\n  margin-left: 150px;\n  text-align: center;\n  font-weight: bold;\n  font-size: 30px;\n  font-family: 'Roboto', sans-serif;\n`;\n","export const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filteredContacts = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLocaleLowerCase();\n    const result = normalizedName.includes(normalizedFilter);\n    return result;\n  });\n  return filteredContacts;\n};\n\nexport const getLoadingStatus = state => state.contacts.loading;","import { Form } from './Form/Form';\nimport { Contacts } from './Contacts/Contacts';\nimport Filter from './Filter/Filter';\nimport { AppStyled, Title, SubTitle } from './PhoneBook.styled.jsx.jsx';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { getFilter } from 'redux/filter/filterSlice';\nimport { getFilteredContacts, getState } from 'redux/contacts/contactsSelector';\n\nexport const PhoneBook = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const { isLoading, error } = useSelector(getState);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <AppStyled>\n      <div>\n        <Title>Phonebook</Title>\n        <Form />\n      </div>\n      <div>\n        <SubTitle>Contacts</SubTitle>\n        <Filter filter={filter} />\n        <Contacts items={contacts} />\n        {isLoading && <p>...loading</p>}\n        {error && <p>oops, something went wrong</p>}\n      </div>\n    </AppStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport contacts_banner from '../../shared/images/contacts_banner.png';\nexport const Background = styled.div`\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-image: linear-gradient(\n      90deg,\n      rgba(2, 0, 36, 1) 0%,\n      rgba(207, 232, 252, 0.6951155462184874) 0%\n    ),\n    url(${contacts_banner});\n\n  max-width: 1920px;\n  height: 1280px;\n`;\n","import React from 'react';\nimport { PhoneBook } from '../../components/PhoneBook/PhoneBook';\nimport { Background } from './MyPhoneBookPage.styled';\nexport default function MyPhoneBookPage() {\n  return (\n    <Background>\n      <PhoneBook />\n    </Background>\n  );\n}\n"],"names":["ContactsForm","styled","LabelName","LabelPhone","Container","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","nameId","nanoid","numberId","onInputChange","event","target","value","onSubmit","preventDefault","contact","action","addContact","onAddContact","htmlFor","TextField","variant","type","pattern","title","required","onChange","Button","ContactList","Item","Contacts","items","elements","map","id","IconButton","size","edge","color","sx","mr","onClick","deleteContact","onDeleteContact","FilterList","FilterTitle","filter","filterID","setFilter","AppStyled","Title","SubTitle","getState","contacts","loading","error","getFilteredContacts","normalizedFilter","toLocaleLowerCase","includes","PhoneBook","useSelector","isLoading","getFilter","useEffect","fetchContacts","Background","contacts_banner","MyPhoneBookPage"],"sourceRoot":""}