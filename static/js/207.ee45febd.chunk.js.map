{"version":3,"file":"static/js/207.ee45febd.chunk.js","mappings":"mPAiBA,EAjBe,CACXA,MAAO,CACHC,MAAO,aACPC,KAAM,QACNC,KAAM,QACNC,YAAa,mBACbC,UAAU,GAEdC,SAAU,CACNL,MAAO,gBACPC,KAAM,WACNC,KAAM,WACNC,YAAa,sCACbC,UAAU,I,SCNH,SAASE,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KACA,GAAgCD,EAAAA,EAAAA,UAAS,IAAzC,eAAOF,EAAP,KAAiBI,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAClCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAErCE,EAAgB,SAAAC,GACpB,MAAwBA,EAAMC,OAAtBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACd,OAAQlB,GACN,IAAK,QACHO,EAASW,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,OAEL,EAYD,OACE,0BACE,kBAAMC,SATW,SAAAH,GACnBA,EAAMI,iBALQ,SAAAC,GACd,IAAMC,GAASC,EAAAA,EAAAA,GAAMF,GACrBZ,EAASa,EACV,CAGCE,CAAQ,CAAE1B,MAAAA,EAAOM,SAAAA,IACjBG,EAAS,IACTC,EAAY,GACb,EAIG,WACE,mBAAOiB,QAASd,EAAhB,oBAEE,0BACEe,GAAIf,EACJO,MAAOpB,EACP6B,SAAUZ,GACNa,EAAAA,YAGR,mBAAOH,QAASX,EAAhB,uBAEE,0BACEY,GAAIZ,EACJI,MAAOd,EACPuB,SAAUZ,GACNa,EAAAA,eAGR,mBAAQ3B,KAAK,SAAb,uBAIP,CChEM,IAAM4B,EAAU,SAAC,GAAD,SAAEC,KAAeD,OAAjB,E,UCMR,SAASE,IAEtB,OADoBC,EAAAA,EAAAA,IAAYH,IAEvB,SAAC,KAAD,CAAUI,GAAG,eAGpB,0BACE,SAAC5B,EAAD,KAGL,C","sources":["components/LoginForm/fields.js","components/LoginForm/LoginForm.jsx","redux/auth/authSelector.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["const fields = {\n    email: {\n        label: \"User email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter user email\",\n        required: true,\n    },\n    password: {\n        label: \"User password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter user password (min 6 symbols)\",\n        required: true,\n    }\n}\n\nexport default fields;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport { nanoid } from 'nanoid';\nimport { useMemo } from 'react';\nimport fields from './fields';\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const emailId = useMemo(() => nanoid(), []);\n  const passwordId = useMemo(() => nanoid(), []);\n\n  const onInputChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onLogin = data => {\n    const action = login(data);\n    dispatch(action);\n  };\n  const onSubmitForm = event => {\n    event.preventDefault();\n    onLogin({ email, password });\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitForm}>\n        <label htmlFor={emailId}>\n          Email:\n          <input\n            id={emailId}\n            value={email}\n            onChange={onInputChange}\n            {...fields.email}\n          />\n        </label>\n        <label htmlFor={passwordId}>\n          Password:\n          <input\n            id={passwordId}\n            value={password}\n            onChange={onInputChange}\n            {...fields.password}\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n","export const isLogin = ({auth}) => auth.isLogin;","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\nimport { isLogin } from 'redux/auth/authSelector';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nexport default function LoginPage() {\n  const isUserLogin = useSelector(isLogin);\n  if (isUserLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["email","label","name","type","placeholder","required","password","LoginForm","useState","setEmail","setPassword","dispatch","useDispatch","emailId","useMemo","nanoid","passwordId","onInputChange","event","target","value","onSubmit","preventDefault","data","action","login","onLogin","htmlFor","id","onChange","fields","isLogin","auth","LoginPage","useSelector","to"],"sourceRoot":""}